@model CoreClean.Web.ViewModels.PhotoViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@{
    //ViewData["Title"] = "Add a photo";
    ViewBag.Title = "Photo";
}

<div class="row">
    @if (SignInManager.IsSignedIn(User))
    {
        <div class="col-sm-4 mx-auto">
            <div class="card regCard">
                <form asp-action="Create" enctype="multipart/form-data">
                    <h4 style="text-align:center">Add Photo </h4>
                    <hr class="hrSeparator">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Title" class="control-label"></label>
                        <input asp-for="Title" class="form-control" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Description" class="control-label"></label>
                        <input asp-for="Description" class="form-control" />
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                     
                    <div class="editor-label">
                        <label class="control-label">Category</label>
                        @Html.DropDownListFor(M => M.CategoryId, new SelectList(Model.catlist, "Value", "Text"), "Select Category", new {@class= "form-select" })
                    </div>
                    @*<div class="form-group">
                <label asp-for="CategoryName" class="control-label"></label>
                <input asp-for="CategoryName" class="form-control" />
                <span asp-validation-for="CategoryName" class="text-danger"></span>
                </div>*@

                    @*<div class="form-group">
                <asp:DropDownList it>
                <select class="form-control" id="CategoryName">
                @foreach (var category in Model.Categories)
                {
                <option>@category.Name</option>
                }

                </select>
                </div>*@
                    @*@foreach (var category in Model.Categories)
                {
                <div class="form-check">
                <input asp-for="CategoryName" class="form-check-input" type="checkbox" id="flexCheckDefault">
                @category.Name

                <label asp-for="CategoryName" class="form-check-label" for="flexCheckDefault">
                @category.Name
                </label>
                </div>
                }*@

                    @*@Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                @Html.DropDownListFor(model => model.Platform, (SelectList)ViewBag.Platforms)
                @Html.ValidationMessageFor(model => model.Platform, "", new { @class = "text-danger" })
                </div>*@
                    <div class="form-group">

                        <dl>
                            <dt>
                                <label asp-for="FormFile" style="font-weight:300"></label>
                            </dt>
                            <dd>
                                <input asp-for="FormFile" type="file">
                                <span asp-validation-for="FormFile"></span>
                            </dd>
                        </dl>


                    </div>
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" style="margin: auto; text-align: center; display: block; margin: auto;margin-bottom:10px" />
                    </div>
                </form>
            </div>
        </div>
        <div>
            <a asp-action="Index">Back to List</a>
        </div>
    }
    else
    {
        <div class="align-items-center justify-content-center text-center pt-4">
            <h3 class="pb-2 mb-4">You must login in order to post a photo</h3>
            <button class="btn btn-primary p-0" style="width:20%;"><a class="nav-link " style="text-decoration:none; color:white" asp-area="Identity" asp-page="/Account/Login">Login</a></button>
        </div>
    }
</div>



@section Scripts {
    @{
    <script src="https://maps.google.com/maps/api/js?sensor=false" type="text/javascript"></script>   
<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg&callback=initMap&v=weekly"></script>
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    <script type="text/javascript">
    $(document).ready(function () {    
    Initialize();     
});     
 var locations = [
      ['<strong>Atelier Riedel</strong><br>Raiffeisenstr. 10a<br>41751 Viersen', 51.273292, 6.273003, 1]
    ];

    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 15,
      center: new google.maps.LatLng(51.272, 6.273),
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });

    var infowindow = new google.maps.InfoWindow();

    var marker, i;

    for (i = 0; i < locations.length; i++) {  
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations[i][1], locations[i][2]),
        map: map
      });

      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          infowindow.setContent(locations[i][0]);
          infowindow.open(map, marker);
        }
      })(marker, i));
    }
    </script>
    }
    }
<style> #map_canvas img{max-width:none} </style>   